{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handleSort","ALPHABET","setState","LENGTH","handleReverse","handleReset","this","isSorted","goodsToRender","goods","visibleGoods","sort","good1","good2","localeCompare","length","reverse","getReorderedGoods","className","type","cn","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,WAAa,SAACF,GACZ,OAAQA,GACN,KAAKL,EAASQ,SACZ,EAAKC,SAAS,CAAEJ,SAAUL,EAASQ,WACnC,MAEF,KAAKR,EAASU,OACZ,EAAKD,SAAS,CAAEJ,SAAUL,EAASU,WAb3C,EAqBEC,cAAgB,WACd,EAAKF,UAAS,SAAAN,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAvBzB,EA2BEQ,YAAc,WACZ,EAAKH,SAAS,CACZL,YAAY,EACZC,SAAUL,EAASM,QA9BzB,4CAkCE,WAAU,IAAD,OACP,EAAiCO,KAAKV,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdS,EAAWT,IAAaL,EAASM,MAAQF,EACzCW,EApEH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAENa,EAAY,YAAOD,GAezB,OAbAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQf,GACN,KAAKL,EAASQ,SACZ,OAAOW,EAAME,cAAcD,GAE7B,KAAKpB,EAASU,OACZ,OAAOS,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAITlB,EACKa,EAAaM,UAGfN,EA6CiBO,CAAkBvB,EAAiBY,KAAKV,OAE9D,OACE,sBAAKsB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYtB,IAAaL,EAASQ,WAEtCoB,QAAS,kBAAM,EAAKrB,WAAWP,EAASQ,WAN1C,iCAWA,wBACEkB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYtB,IAAaL,EAASU,SAEtCkB,QAAS,kBAAM,EAAKrB,WAAWP,EAASU,SAN1C,4BAWA,wBACEgB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAavB,IAEjBwB,QAASf,KAAKF,cANhB,qBAWCG,GACC,wBACEY,KAAK,SACLD,UAAU,4BACVG,QAASf,KAAKD,YAHhB,sBAUJ,6BACE,6BACGG,EAAcc,KAAI,SAAAC,GAAI,OACrB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,iBAzFvB,GAAyBC,IAAMC,WCzD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7a4fd47f.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleSort = (sortType: SortType) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        this.setState({ sortType: SortType.ALPHABET });\n        break;\n\n      case SortType.LENGTH:\n        this.setState({ sortType: SortType.LENGTH });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  handleReverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const isSorted = sortType !== SortType.NONE || isReversed;\n    const goodsToRender = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={() => this.handleSort(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={() => this.handleSort(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.handleReverse}\n          >\n            Reverse\n          </button>\n\n          {isSorted && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {goodsToRender.map(good => (\n              <li key={good} data-cy=\"Good\">\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}